{"ast":null,"code":"var _jsxFileName = \"/Users/shubhampatil/shubham/github/school_new/school/src/math_ops/Add.js\";\nimport React, { Component } from 'react';\nimport classNames from 'classnames';\nimport { findDOMNode } from 'react-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Index(props) {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"circle\",\n    children: [\" \", props.index, \" \"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 12\n  }, this);\n}\n\n_c = Index;\n\nclass Add extends Component {\n  constructor(props) {\n    super(props);\n    this.numbers = 3;\n    this.size = 4;\n    this.TEXT_HEIGHT = 40;\n    this.HALF_BIG_FONT_HEIGHT = 15;\n    this.BIG_FONT_HEIGHT = '30px';\n    this.SMALL_FONT_HEIGHT = '20px';\n    this.CARRYOVER_HEIGHT = 30;\n    this.LINE_HEIGHT = 0;\n    this.INPUT_HEIGHT = 80;\n    this.LETTER_WIDTH = 25;\n    this.Y_START = 25;\n    this.X_START = 0;\n    this.Y = this.Y_START;\n    this.X = this.X_START;\n    this.showAnswer = false;\n    this.lineKey = 0;\n    this.sums = this.constructProblem();\n  }\n\n  setDimension() {\n    for (let i = 0; i <= 1; i++) {\n      const el = findDOMNode(this.refs['sum' + i]);\n\n      if (el) {\n        const bbox = el.getBBox();\n        el.setAttributeNS(null, 'width', bbox.width + 20);\n        el.setAttributeNS(null, 'height', bbox.height + 20);\n      }\n    }\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    this.setDimension();\n  }\n\n  componentDidMount() {\n    this.setDimension();\n  }\n\n  constructProblem() {\n    this.addends = [];\n    let answer = 0;\n\n    for (let i = 0; i < this.numbers; i++) {\n      const number = Math.floor(Math.random() * 1000 + 1);\n      answer += number;\n      this.addends.push(number.toString().split('').map(e => +e));\n    }\n\n    this.answerArray = answer.toString().split('').map(e => +e);\n    this.length = this.answerArray.length;\n    this.formatSum();\n  }\n\n  plus(x, y) {\n    return /*#__PURE__*/_jsxDEV(\"g\", {\n      children: [/*#__PURE__*/_jsxDEV(\"line\", {\n        x1: x,\n        y1: y - 8,\n        x2: x + 16,\n        y2: y - 8,\n        style: {\n          stroke: 'rgb(0,0,0)',\n          strokeWidth: '2'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"line\", {\n        x1: x + 8,\n        y1: y - 16,\n        x2: x + 8,\n        y2: y,\n        style: {\n          stroke: 'rgb(0,0,0)',\n          strokeWidth: '2'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 17\n    }, this);\n  }\n\n  textline(line) {\n    const y = this.Y;\n    this.Y += line.size ? 35 : this.TEXT_HEIGHT;\n    const xStart = 1.25 * this.LETTER_WIDTH + (this.length - line.texts.length) * this.LETTER_WIDTH;\n    let operation = null;\n\n    if (line.hasOwnProperty('operation') && line.operation === '+') {\n      operation = this.plus(0, y);\n    }\n\n    let nonZeroFound = false;\n    let texts = line.texts.map((e, i) => {\n      if (e.text !== '0' && !nonZeroFound) {\n        nonZeroFound = true;\n      }\n\n      let visibility = nonZeroFound && e.text !== 'x' ? 'visible' : 'hidden';\n\n      if (i === line.texts.length - 1 && !nonZeroFound && !line.hasOwnProperty('isCarryOver')) {\n        visibility = 'visible';\n      }\n\n      const fill = line.hasOwnProperty('isCarryOver') ? 'orange' : 'black';\n      return /*#__PURE__*/_jsxDEV(\"text\", {\n        x: xStart + i * this.LETTER_WIDTH,\n        y: y,\n        style: {\n          fill: `${fill}`,\n          fontSize: line.size,\n          textAnchor: 'middle',\n          visibility: `${visibility}`,\n          fontWeight: e.weight ? e.weight : 'normal'\n        },\n        children: [e.text, \" \"]\n      }, i, true, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 20\n      }, this);\n    });\n    return /*#__PURE__*/_jsxDEV(\"g\", {\n      children: [\" \", operation, \" \", texts, \" \"]\n    }, this.lineKey++, true, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 16\n    }, this);\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.check) {\n      this.showAnswer = true;\n    }\n\n    if (nextProps.new) {\n      this.constructProblem();\n      this.showAnswer = false;\n    }\n  }\n\n  formatSum() {\n    this.displayProblem();\n    this.displayAnswer();\n  }\n\n  addCarryOverLine(answer) {\n    const carryText = this.carryover();\n    let foundCarryDiigit = false;\n\n    for (let i = 0; i < carryText.length; i++) {\n      if (carryText[i] !== 'x') {\n        foundCarryDiigit = true;\n      }\n    }\n\n    if (!foundCarryDiigit) {\n      return;\n    }\n\n    const carryOverLine = this.numberToTextline(carryText);\n    carryOverLine.size = this.SMALL_FONT_HEIGHT;\n    carryOverLine.isCarryOver = true;\n    answer.textlines.push(carryOverLine);\n  }\n\n  displayAnswer() {\n    this.answer = {};\n    const answer = this.answer;\n    answer.textlines = [];\n    this.addCarryOverLine(answer);\n    answer.textlines.push(...this.problem.textlines);\n    answer.textlines.push(this.numberToTextline(this.answerArray));\n  }\n\n  displayProblem() {\n    this.problem = {};\n    this.problem.textlines = [];\n\n    for (let i = 0; i < this.addends.length; i++) {\n      const line = this.numberToTextline(this.addends[i]);\n\n      if (i > 0) {\n        line.operation = '+';\n      }\n\n      this.problem.textlines.push(line);\n    }\n\n    this.problem.textlines.push({\n      type: 'line'\n    });\n  }\n\n  line() {\n    let y = this.Y - this.TEXT_HEIGHT / 2;\n    this.Y += this.LINE_HEIGHT + 10;\n    return /*#__PURE__*/_jsxDEV(\"line\", {\n      x1: this.X,\n      y1: y,\n      x2: this.X + this.length * this.LETTER_WIDTH + this.LETTER_WIDTH / 2,\n      y2: y,\n      style: {\n        stroke: 'rgb(0,0,0)',\n        strokeWidth: '2'\n      }\n    }, this.lineKey++, false, {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 17\n    }, this);\n  }\n\n  numberToTextline(number) {\n    let textline = {};\n    textline.type = 'textline';\n    textline.size = this.BIG_FONT_HEIGHT;\n    textline.texts = number.map(d => {\n      return {\n        text: d.toString()\n      };\n    });\n    return textline;\n  }\n\n  renderSum(s, i, border, anchor) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classNames('sum1', border),\n      children: [/*#__PURE__*/_jsxDEV(Index, {\n        index: anchor\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"svg\", {\n        ref: 'sum' + i,\n        style: {},\n        children: [this.Y = this.Y_START, \" \", this.X = this.X_START, \"}\", s.textlines.map(l => {\n          switch (l.type) {\n            case 'textline':\n              return this.textline(l);\n\n            case 'line':\n              return this.line();\n\n            default:\n              return this.line();\n          }\n        })]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 16\n    }, this);\n  }\n\n  carryover() {\n    let sum = 0;\n    let carryoverDigits = [];\n    let carry = 0;\n\n    for (let i = this.addends[0].length - 1; i >= 0; i--) {\n      for (let j = 0; j < this.addends.length; j++) {\n        sum += parseInt(this.addends[j][i], 10);\n      }\n\n      if (sum > 9) {\n        let sumString = sum.toString();\n        carry = sumString.slice(0, sumString.length - 1);\n        carryoverDigits.push(carry);\n        sum = parseInt(carry);\n      } else {\n        sum = 0;\n        carryoverDigits.push('x');\n      }\n    }\n\n    carryoverDigits.unshift('x');\n    carryoverDigits[carryoverDigits.length - 1] = 'x';\n    return carryoverDigits.reverse();\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sumContainer\",\n      style: {\n        display: 'flex',\n        margin: '20px',\n        flexWrap: 'wrap'\n      },\n      children: [this.renderSum(this.problem, 0, 'blueBorder', 'Q'), this.showAnswer && this.renderSum(this.answer, 1, 'greenBorder', 'A')]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default Add;\n\nvar _c;\n\n$RefreshReg$(_c, \"Index\");","map":{"version":3,"sources":["/Users/shubhampatil/shubham/github/school_new/school/src/math_ops/Add.js"],"names":["React","Component","classNames","findDOMNode","Index","props","index","Add","constructor","numbers","size","TEXT_HEIGHT","HALF_BIG_FONT_HEIGHT","BIG_FONT_HEIGHT","SMALL_FONT_HEIGHT","CARRYOVER_HEIGHT","LINE_HEIGHT","INPUT_HEIGHT","LETTER_WIDTH","Y_START","X_START","Y","X","showAnswer","lineKey","sums","constructProblem","setDimension","i","el","refs","bbox","getBBox","setAttributeNS","width","height","componentDidUpdate","prevProps","prevState","componentDidMount","addends","answer","number","Math","floor","random","push","toString","split","map","e","answerArray","length","formatSum","plus","x","y","stroke","strokeWidth","textline","line","xStart","texts","operation","hasOwnProperty","nonZeroFound","text","visibility","fill","fontSize","textAnchor","fontWeight","weight","componentWillReceiveProps","nextProps","check","new","displayProblem","displayAnswer","addCarryOverLine","carryText","carryover","foundCarryDiigit","carryOverLine","numberToTextline","isCarryOver","textlines","problem","type","d","renderSum","s","border","anchor","l","sum","carryoverDigits","carry","j","parseInt","sumString","slice","unshift","reverse","render","display","margin","flexWrap"],"mappings":"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","sourcesContent":["\nimport React, { Component } from 'react';\nimport classNames from 'classnames'\nimport { findDOMNode } from 'react-dom';\n\nfunction Index(props) {\n    return <div className=\"circle\"> {props.index} </div>\n}\n\nclass Add extends Component {\n    constructor(props) {\n        super(props);\n        this.numbers = 3;\n        this.size = 4;\n        this.TEXT_HEIGHT = 40\n        this.HALF_BIG_FONT_HEIGHT = 15;\n        this.BIG_FONT_HEIGHT = '30px'\n        this.SMALL_FONT_HEIGHT = '20px'\n        this.CARRYOVER_HEIGHT = 30;\n        this.LINE_HEIGHT = 0;\n        this.INPUT_HEIGHT = 80;\n        this.LETTER_WIDTH = 25;\n        this.Y_START = 25;\n        this.X_START = 0;\n        this.Y = this.Y_START;\n        this.X = this.X_START;\n        this.showAnswer = false;\n        this.lineKey = 0;\n        this.sums = this.constructProblem();\n    }\n\n    setDimension() {\n        for (let i = 0; i <= 1; i++) {\n            const el = findDOMNode(this.refs['sum' + i]);\n            if (el) {\n                const bbox = el.getBBox();\n                el.setAttributeNS(null, 'width', bbox.width + 20)\n                el.setAttributeNS(null, 'height', bbox.height + 20)\n            }\n        }\n    }\n\n    componentDidUpdate(prevProps, prevState) {\n        this.setDimension();\n    }\n\n    componentDidMount() {\n        this.setDimension();\n    }\n\n    constructProblem() {\n        this.addends = [];\n        let answer = 0;\n        for (let i = 0; i < this.numbers; i++) {\n            const number = Math.floor((Math.random() * 1000) + 1);\n            answer += number;\n            this.addends.push(number.toString().split('').map((e) => (+e)));\n        }\n        this.answerArray = answer.toString().split('').map((e) => (+e));\n        this.length = this.answerArray.length;\n        this.formatSum();\n    }\n\n    plus(x, y) {\n        return (<g>\n            <line x1={x} y1={y - 8} x2={x + 16} y2={y - 8} style={{ stroke: 'rgb(0,0,0)', strokeWidth: '2' }} />\n            <line x1={x + 8} y1={y - 16} x2={x + 8} y2={y} style={{ stroke: 'rgb(0,0,0)', strokeWidth: '2' }} />\n        </g>)\n    }\n\n    textline(line) {\n        const y = this.Y;\n        this.Y += line.size ? 35 : this.TEXT_HEIGHT;\n        const xStart = 1.25 * this.LETTER_WIDTH + (this.length - line.texts.length) * this.LETTER_WIDTH;\n        let operation = null;\n        if (line.hasOwnProperty('operation') && line.operation === '+') {\n            operation = this.plus(0, y)\n        }\n        let nonZeroFound = false;\n        let texts = line.texts.map((e, i) => {\n            if (e.text !== '0' && !nonZeroFound) {\n                nonZeroFound = true;\n            }\n            let visibility = nonZeroFound && e.text !== 'x' ? 'visible' : 'hidden';\n            if (i === line.texts.length - 1 && !nonZeroFound && !line.hasOwnProperty('isCarryOver')) {\n                visibility = 'visible';\n            }\n            const fill = line.hasOwnProperty('isCarryOver') ? 'orange' : 'black';\n            return <text key={i} x={xStart + i * this.LETTER_WIDTH} y={y} style={{ fill: `${fill}`, fontSize: line.size, textAnchor: 'middle', visibility: `${visibility}`, fontWeight: e.weight ? e.weight : 'normal' }}>{e.text} </text>\n        });\n        return <g key={this.lineKey++}> {operation} {texts} </g>\n    }\n\n    componentWillReceiveProps(nextProps) {\n        if (nextProps.check) {\n            this.showAnswer = true;\n        }\n        if (nextProps.new) {\n            this.constructProblem();\n            this.showAnswer = false;\n        }\n    }\n\n    formatSum() {\n        this.displayProblem();\n        this.displayAnswer();\n    }\n\n    addCarryOverLine(answer) {\n        const carryText = this.carryover();\n        let foundCarryDiigit = false;\n        for (let i = 0; i < carryText.length; i++) {\n            if (carryText[i] !== 'x') {\n                foundCarryDiigit = true;\n            }\n        }\n        if (!foundCarryDiigit) {\n            return;\n        }\n        const carryOverLine = this.numberToTextline(carryText);\n        carryOverLine.size = this.SMALL_FONT_HEIGHT;\n        carryOverLine.isCarryOver = true;\n        answer.textlines.push(carryOverLine);\n    }\n\n    displayAnswer() {\n        this.answer = {};\n        const answer = this.answer;\n        answer.textlines = [];\n        this.addCarryOverLine(answer);\n        answer.textlines.push(...this.problem.textlines);\n        answer.textlines.push(this.numberToTextline(this.answerArray));\n    }\n\n    displayProblem() {\n        this.problem = {};\n        this.problem.textlines = [];\n        for (let i = 0; i < this.addends.length; i++) {\n            const line = this.numberToTextline(this.addends[i]);\n            if (i > 0) {\n                line.operation = '+';\n            }\n            this.problem.textlines.push(line);\n        }\n        this.problem.textlines.push({ type: 'line' });\n    }\n\n    line() {\n        let y = this.Y - this.TEXT_HEIGHT / 2;\n        this.Y += this.LINE_HEIGHT + 10;\n\n        return (<line key={this.lineKey++} x1={this.X} y1={y} x2={this.X + this.length * this.LETTER_WIDTH + this.LETTER_WIDTH / 2} y2={y} style={{ stroke: 'rgb(0,0,0)', strokeWidth: '2' }} />)\n    }\n\n    numberToTextline(number) {\n        let textline = {};\n        textline.type = 'textline';\n        textline.size = this.BIG_FONT_HEIGHT;\n        textline.texts = number.map((d) => {\n            return {\n                text: d.toString()\n            }\n        })\n        return textline;\n    }\n\n    renderSum(s, i, border, anchor) {\n        return <div className={classNames('sum1', border)} >\n            <Index index={anchor} />\n            <svg ref={'sum' + i} style={{}}>\n                {this.Y = this.Y_START} {this.X = this.X_START}}\n                {\n                    s.textlines.map((l) => {\n                        switch (l.type) {\n                            case 'textline':\n                                return this.textline(l);\n                            case 'line':\n                                return this.line();\n                            default:\n                                return this.line();\n                        }\n                    })\n                }\n            </svg>\n        </div>\n    }\n\n    carryover() {\n        let sum = 0;\n        let carryoverDigits = [];\n        let carry = 0;\n        for (let i = this.addends[0].length - 1; i >= 0; i--) {\n            for (let j = 0; j < this.addends.length; j++) {\n                sum += parseInt(this.addends[j][i], 10);\n            }\n            if (sum > 9) {\n                let sumString = sum.toString();\n                carry = sumString.slice(0, sumString.length - 1);\n                carryoverDigits.push(carry)\n                sum = parseInt(carry);\n            } else {\n                sum = 0;\n                carryoverDigits.push('x')\n            }\n        }\n        carryoverDigits.unshift('x');\n        carryoverDigits[carryoverDigits.length - 1] = 'x';\n        return carryoverDigits.reverse();\n    }\n\n    render() {\n        return (\n            <div className=\"sumContainer\" style={{ display: 'flex', margin: '20px', flexWrap: 'wrap' }}>\n                {this.renderSum(this.problem, 0, 'blueBorder', 'Q')}\n                {this.showAnswer &&\n                    this.renderSum(this.answer, 1, 'greenBorder', 'A')\n                }\n            </div>)\n    }\n}\n\nexport default Add;\n"]},"metadata":{},"sourceType":"module"}