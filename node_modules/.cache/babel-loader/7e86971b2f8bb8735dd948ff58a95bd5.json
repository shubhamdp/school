{"ast":null,"code":"var _jsxFileName = \"/Users/shubhampatil/shubham/github/school_new/school/src/math_ops/Worksheet.js\";\nimport React, { Component } from 'react';\nimport Add from './Add';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Index(props) {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"circle\",\n    children: [\" \", props.index, \" \"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 5,\n    columnNumber: 12\n  }, this);\n}\n\n_c = Index;\n\nclass Worksheet extends Component {\n  constructor(props) {\n    super(props);\n    this.newOperation = this.selectedOperation = 'Addition';\n    this.state = {};\n    this.showStepsCallback = this.showStepsCallback.bind(this);\n    this.newProblemsCallback = this.newProblemsCallback.bind(this);\n    this.showAnswerCallback = this.showAnswerCallback.bind(this);\n    this.change = this.change.bind(this);\n    this.new = true;\n    this.check = false;\n    this.answer = false;\n    this.g = 0;\n  }\n\n  showStepsCallback() {\n    if (!this.check) {\n      this.check = true;\n      this.answer = false;\n      this.setState({});\n    }\n  }\n\n  showAnswerCallback() {\n    if (!this.answer) {\n      this.answer = true;\n      this.check = false;\n      this.setState({});\n    }\n  }\n\n  newProblemsCallback() {\n    this.new = true;\n    this.check = false;\n    this.answer = false;\n    this.setState({});\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    this.resetState();\n  }\n\n  resetState() {\n    this.check = false;\n    this.new = false;\n  }\n\n  shouldComponentUpdate(nextProps, nextState) {\n    return true;\n  }\n\n  componentDidMount() {\n    this.resetState();\n  }\n\n  showProblems() {\n    let result = [];\n    const operation = this.selectedOperation;\n    let count = this.refs.count ? parseInt(this.refs.count.value) : 10;\n\n    if (operation === 'Addition') {\n      for (let i = 0; i < count; i++) {\n        result.push( /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            borderStyle: 'solid',\n            borderColor: 'gray',\n            margin: '10px 40px 10px 10px',\n            position: 'relative'\n          },\n          children: [/*#__PURE__*/_jsxDEV(Index, {\n            index: i + 1\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 27\n          }, this), /*#__PURE__*/_jsxDEV(Add, {\n            check: this.check,\n            new: this.new\n          }, i, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 25\n          }, this)]\n        }, i, true, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 21\n        }, this));\n      }\n    }\n\n    return result;\n  }\n\n  change(event) {\n    this.newOperation = event.target.value;\n\n    if (this.selectedOperation !== this.newOperation) {\n      this.selectedOperation = this.newOperation;\n      this.new = true;\n      this.check = false;\n      this.setState({});\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'flex',\n          justifyContent: 'space-around'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"select\", {\n          onChange: this.change,\n          defaultValue: this.selectedOperation,\n          children: /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"Addition\",\n            children: \"Addition\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: this.showStepsCallback,\n          children: \" Steps \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: this.showAnswerCallback,\n          children: \" Answers \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: this.newProblemsCallback,\n          children: \" New \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        style: {\n          margin: '10px'\n        },\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          children: this.showProblems()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default Worksheet;\n\nvar _c;\n\n$RefreshReg$(_c, \"Index\");","map":{"version":3,"sources":["/Users/shubhampatil/shubham/github/school_new/school/src/math_ops/Worksheet.js"],"names":["React","Component","Add","Index","props","index","Worksheet","constructor","newOperation","selectedOperation","state","showStepsCallback","bind","newProblemsCallback","showAnswerCallback","change","new","check","answer","g","setState","componentDidUpdate","prevProps","prevState","resetState","shouldComponentUpdate","nextProps","nextState","componentDidMount","showProblems","result","operation","count","refs","parseInt","value","i","push","borderStyle","borderColor","margin","position","event","target","render","display","justifyContent"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Add from './Add'\n\nfunction Index(props) {\n    return <div className=\"circle\"> {props.index} </div>\n}\n\nclass Worksheet extends Component {\n\n    constructor(props) {\n        super(props);\n        this.newOperation = this.selectedOperation = 'Addition';\n        this.state = {}\n        this.showStepsCallback = this.showStepsCallback.bind(this);\n        this.newProblemsCallback = this.newProblemsCallback.bind(this);\n        this.showAnswerCallback = this.showAnswerCallback.bind(this);\n        this.change = this.change.bind(this);\n        this.new = true;\n        this.check = false;\n        this.answer = false;\n        this.g = 0;\n    }\n\n    showStepsCallback() {\n        if (!this.check) {\n            this.check = true;\n            this.answer = false;\n            this.setState({})\n        }\n    }\n\n    showAnswerCallback() {\n        if (!this.answer) {\n            this.answer = true;\n            this.check = false;\n            this.setState({})\n        }\n    }\n\n    newProblemsCallback() {\n        this.new = true;\n        this.check = false;\n        this.answer = false;\n        this.setState({})\n    }\n\n    componentDidUpdate(prevProps, prevState) {\n        this.resetState();\n    }\n\n    resetState() {\n        this.check = false;\n        this.new = false;\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        return true;\n    }\n\n    componentDidMount() {\n        this.resetState();\n    }\n\n    showProblems() {\n        let result = [];\n        const operation = this.selectedOperation;\n        let count = this.refs.count ? parseInt(this.refs.count.value) : 10;\n\n        if (operation === 'Addition') {\n            for (let i = 0; i < count; i++) {\n                result.push(\n                    <div key={i} style={{ borderStyle: 'solid', borderColor: 'gray', margin: '10px 40px 10px 10px', position: 'relative' }}>\n                        { <Index index={i + 1} /> }\n                        <Add key={i} check={this.check} new={this.new} />\n                    </div>\n                );\n            }\n        }\n\n        return result;\n    }\n\n    change(event) {\n        this.newOperation = event.target.value;\n        if (this.selectedOperation !== this.newOperation) {\n            this.selectedOperation = this.newOperation;\n            this.new = true;\n            this.check = false;\n            this.setState({});\n        }\n    }\n\n    render() {\n        return (\n            <div>\n                <div style={{ display: 'flex', justifyContent: 'space-around' }}>\n                    <select onChange={this.change} defaultValue={this.selectedOperation}>\n                        <option value=\"Addition\">Addition</option>\n                    </select>\n                    <button onClick={this.showStepsCallback}> Steps </button>\n                    <button onClick={this.showAnswerCallback}> Answers </button>\n                    <button onClick={this.newProblemsCallback}> New </button>\n                </div>\n                <div className=\"container\" style={{ margin: '10px' }}>\n                    <div>\n                        {this.showProblems()}\n                    </div>\n                </div>\n            </div >)\n    }\n}\n\nexport default Worksheet;\n"]},"metadata":{},"sourceType":"module"}